name: Release Workflow

on:
  create:
    branches:
      - 'release/*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x.x' # You can adjust the version if needed

    - name: Extract version from branch name
      run: |
        # Extract version from the branch name (assuming the branch name format is release/x.y.z)
        echo "VERSION=$(echo "${{ github.ref }}" | sed 's/refs\/heads\/release\///')" >> $GITHUB_ENV

        echo "Version extracted from branch name: $version"
      id: extract-version

    - name: Build and pack NuGet packages
      run: |
        # Restore dependencies and build the code
        dotnet restore
        dotnet build --configuration Release

        # Find all projects in the repository
        projects=$(find . -name '*.csproj')

        # Pack each project with the extracted version
        for project in $projects; do
          # Use dotnet pack with the specified version
          dotnet pack $project -c Release -o ./artifacts --version-suffix ${{ steps.extract-version.outputs.version }}

          # Print each file found
          echo "Found file: ./artifacts/$(basename $project .csproj).$version.nupkg"

          # Push the NuGet package to nuget.org
          dotnet nuget push ./artifacts/$(basename $project .csproj).$version.nupkg --source https://api.nuget.org/v3/index.json --api-key $NUGET_API_KEY
        done
 
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
